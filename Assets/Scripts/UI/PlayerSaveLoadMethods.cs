//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Xml; 
using System.Xml.Serialization; 
using System.IO; 
using System.Text;
using UnityEngine;
namespace AssemblyCSharp
{
		public class PlayerSaveLoadMethods
		{
				
				/// <summary>
				/// Initializes a new instance of the <see cref="AssemblyCSharp.PlayerSaveObject"/> class.
				/// </summary>
				public PlayerSaveLoadMethods ()
				{
				
				}
				
				
				/// <summary>
				/// Writes the save object to a file.
				/// </summary>
				/// <param name="playerSaveObject">Player save object.</param>
				public bool saveTheGame (int playerHealth, ArrayList listOfPurchasedShipUpgrades, int[] listOfResourcesCollected, ArrayList listOfPurchasedHomeBaseUpgrades)
				{

						string purchasedShipUpgrades = "";
						string purchasedHomeBaseupgrades = "";
						string resourcesCollected = "";
						int counter = 0;
						bool isSuccess = false;
						try {
								foreach (string item in listOfPurchasedShipUpgrades) {
										if (counter == listOfResourcesCollected.Length - 1) {
												purchasedShipUpgrades += String.Format ("{0}", item);
												counter = 0;
										} else {
												purchasedShipUpgrades += String.Format ("{0},", item);
										}
								}
								foreach (string item in listOfPurchasedHomeBaseUpgrades) {
										if (counter == listOfResourcesCollected.Length - 1) {
												purchasedHomeBaseupgrades += String.Format ("{0}", item);
												counter = 0;
										} else {
												purchasedHomeBaseupgrades += String.Format ("{0},", item);
										}
								}
								foreach (int item in listOfResourcesCollected) {
										if (counter == listOfResourcesCollected.Length - 1) {
												resourcesCollected += String.Format ("{0}", item);
												counter = 0;
										} else {
												resourcesCollected += String.Format ("{0},", item);
										}
								
										counter++;
								}
                              
								PlayerPrefs.SetInt ("health", playerHealth);
								PlayerPrefs.SetString ("shipUpgrades", purchasedShipUpgrades);
								PlayerPrefs.SetString ("homeBaseUpgrades", purchasedHomeBaseupgrades);
								PlayerPrefs.SetString ("resourcesCollected", resourcesCollected);
								PlayerPrefs.Save ();
								isSuccess = true;
						} catch (Exception e) {
								Debug.Log ("A error occurred while trying to save the game, error is: " + e.Message);
								isSuccess = false;
						}
						return isSuccess;
				}
				
				
				/// <summary>
				/// Reads the save file.
				/// </summary>
				/// <param name="saveFileName">Save file name.</param>
				public int loadThePlayerHealth ()
				{
						int health = 0;
						try {
								health = PlayerPrefs.GetInt ("health");
						} catch (Exception e) {
								Debug.Log ("A error occurred when trying to load the player health, error is: " + e.Message);
						}
						return health;
				}
				/// <summary>
				/// Loads the player ship upgrades.
				/// </summary>
				/// <returns><c>true</c>, if the player ship upgrades was loaded, <c>false</c> otherwise.</returns>
				public string loadThePlayerShipUpgrades ()
				{
						string shipUpgrades = "";
						try {
								shipUpgrades = PlayerPrefs.GetString ("shipUpgrades");
						} catch (Exception e) {
								Debug.Log ("A error occurred when trying to load the player ship upgrades, error is: " + e.Message);
						}
						return shipUpgrades;
				}
				/// <summary>
				/// Loads the player homebase upgrades.
				/// </summary>
				/// <returns><c>true</c>, if the player homebase upgrades was loaded, <c>false</c> otherwise.</returns>
				public string loadThePlayerHomebaseUpgrades ()
				{
						string homeBaseUpgrades = "";
						try {
								homeBaseUpgrades = PlayerPrefs.GetString ("homeBaseUpgrades");
						} catch (Exception e) {
								Debug.Log ("A error occurred when trying to load the home base upgrades, error is: " + e.Message);
						}
						return homeBaseUpgrades;
				}
				/// <summary>
				/// Loads the player resources.
				/// </summary>
				/// <returns><c>true</c>, if the player resources was loaded, <c>false</c> otherwise.</returns>
				public string loadThePlayerResources ()
				{
						string resourcesCollected = "";
						try {
								resourcesCollected = PlayerPrefs.GetString ("resourcesCollected");
								
								//for (int i = 0; i < listOfResourcesCollected.Length; i++) {
								//	resources [i] = int.Parse (listOfResourcesCollected [i]);
								//}
						} catch (Exception e) {
								Debug.Log ("A error occurred when trying to load the player resources, error is: " + e.Message);
						}
						return resourcesCollected;
				}
		}
}

